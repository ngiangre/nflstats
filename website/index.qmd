---
engine: knitr
---

Last updated: `r lubridate::with_tz(Sys.time(), "America/New_York")` ET

```{r,echo=FALSE,message=FALSE,warning=FALSE}
with_tooltip <- function(value, tooltip) {
  htmltools::tags$abbr(style = "text-decoration: underline; text-decoration-style: dotted; cursor: help",
            title = tooltip, value)
}

generate_table <- function(stat_type = c('passing','rushing','receiving')){
    stat_type <- match.arg(stat_type)
    
    result <- 
        nflreadr::load_nextgen_stats(
            seasons = lubridate::year(Sys.Date()),
            stat_type = stat_type
        ) |> 
            dplyr::filter(week==0) |> 
            dplyr::select(-week) |> 
            dplyr::mutate(dplyr::across(
                dplyr::where(is.numeric),~{round(.x,2)}
            )) |> 
        dplyr::left_join(
            nflreadr::load_players(),
            by = c("player_gsis_id" = "gsis_id","team_abbr")
        ) |> 
        dplyr::left_join(
            nflreadr::load_teams() |> 
                dplyr::select(dplyr::all_of(c(
                    'team_abbr','team_name',
                    'team_logo_espn','team_division'
                ))),
            by = 'team_abbr'
        )
    
    cols <- 
        union(
            intersect(colnames(result),nflreadr::dictionary_nextgen_stats$field),
            c('team_division','team_name')
        )
    cols <- setdiff(cols,c('player_position','team_abbr','season','season_type',
                           'player_gsis_id','player_first_name','player_last_name',
                           'player_jersey_number','player_short_name'))
    names(cols) <- cols
    
    reactable::reactable(
        result |> 
            dplyr::filter(.data[['season_type']]=="REG") |> 
            dplyr::relocate(headshot) |> 
            dplyr::select(dplyr::any_of(c(
                'headshot','player_display_name',cols
            ))),
        defaultSorted = cols[2],
        defaultSortOrder = 'desc',
        pagination = FALSE,
        searchable = TRUE,
        resizable = TRUE,
        columns = c(
            list(
                headshot = reactable::colDef(
                    cell = reactablefmtr::embed_img(result$headshot,
                                                    width = 135,
                                                    height = 100,
                                                    horizontal_align = "center"),
                    
                    sticky = 'left',
                    name = '',
                    minWidth = 150,
                    style = reactablefmtr::background_img(
                        data = result,
                        width = '90%',
                        height = '90%',
                        img_ref = 'team_logo_espn'
                    )
                )
            ),
            purrr::map(
                cols,
                ~{
                    if(.x=='player_display_name'){
                        name_ <- 'player'
                        reactable::colDef(
                            minWidth = nchar(name_)*13*2,
                            cell = function(value,index){
                                pos <- result$player_position[index]
                                name <- result$player_display_name[index]
                                team <- result$team_name[index]
                                team_division <- result$team_division[index]
                                htmltools::div(
                                  htmltools::div(style = "font-weight: 600", name),
                                  htmltools::div(style = "font-size: 0.80rem",pos),
                                  htmltools::div(style = "font-size: 0.80rem",team),
                                  htmltools::div(style = "font-size: 0.80rem",team_division)
                                )
                            },
                            name = '',
                            sticky = 'left',
                        )
                    }else{
                        reactable::colDef(
                            minWidth = nchar(.x)*13,
                            header = with_tooltip(
                                .x,
                                nflreadr::dictionary_nextgen_stats$description[
                                    nflreadr::dictionary_nextgen_stats$field==.x
                                ]
                            )
                        )
                    }
                }
            )
        )
    )
}

```
::: {.column-screen}
::: panel-tabset

# Next Gen Stats

::: panel-tabset

# Quarterbacks

```{r,echo=FALSE,message=FALSE,warning=FALSE}
generate_table('passing')
```

# Rushers

```{r,echo=FALSE,message=FALSE,warning=FALSE}
generate_table('rushing')
```

# Receivers

```{r,echo=FALSE,message=FALSE,warning=FALSE}
generate_table('receiving')
```

:::
:::
:::